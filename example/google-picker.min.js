!function(){"use strict";angular.module("lk-google-picker",[]).provider("lkGoogleSettings",function(){this.apiKey=null,this.clientId=null,this.scopes=["https://www.googleapis.com/auth/drive"],this.features=["MULTISELECT_ENABLED"],this.views=["DocsView().setIncludeFolders(true)","DocsUploadView().setIncludeFolders(true)"],this.locale="en",this.$get=["$window",function(e){return{apiKey:this.apiKey,clientId:this.clientId,scopes:this.scopes,features:this.features,views:this.views,locale:this.locale,origin:this.origin||e.location.protocol+"//"+e.location.host}}],this.configure=function(e){for(var o in e)this[o]=e[o]}}).factory("GooglePicker",["lkGoogleSettings","$rootScope",function(lkGoogleSettings,$rootScope){return function(onLoaded,onCancel,onPicked,onError){function instanciate(){gapi.load("auth",{callback:onApiAuthLoad}),gapi.load("picker")}function onApiAuthLoad(){var e=gapi.auth.getToken();e?handleAuthResult(e):gapi.auth.authorize({client_id:lkGoogleSettings.clientId,scope:lkGoogleSettings.scopes,immediate:!0},handleAuthResult)}function handleAuthResult(e){e&&!e.error?(accessToken=e.access_token,openDialog()):onError(e?e.error:new Error("result object is not defined"))}function openDialog(){var picker=(new google.picker.PickerBuilder).setLocale(lkGoogleSettings.locale).setOAuthToken(accessToken).setCallback(pickerResponse).setOrigin(lkGoogleSettings.origin);lkGoogleSettings.features.length>0&&angular.forEach(lkGoogleSettings.features,function(e,o){picker.enableFeature(google.picker.Feature[e])}),lkGoogleSettings.views.length>0&&angular.forEach(lkGoogleSettings.views,function(view,key){view=eval("new google.picker."+view),picker.addView(view)}),picker.build().setVisible(!0)}function pickerResponse(e){gapi.client.load("drive","v2",function(){$rootScope.$apply(function(){e.action==google.picker.Action.LOADED&&onLoaded(),e.action==google.picker.Action.CANCEL&&onCancel(),e.action==google.picker.Action.PICKED&&onPicked({docs:e.docs})})})}var accessToken=null;onLoaded=onLoaded||angular.noop,onCancel=onCancel||angular.noop,onPicked=onPicked||angular.noop,onError=onError||angular.noop,gapi.load("auth"),gapi.load("picker"),this.showPicker=instanciate}}])}();